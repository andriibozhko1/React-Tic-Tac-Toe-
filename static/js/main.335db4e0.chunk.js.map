{"version":3,"sources":["index.js"],"names":["Game","props","_this","Object","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","checkWinCombination","event","target","dataset","isEmpty","id","newCells","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","state","cells","counter","status","setState","fillTable","i","cell","push","winCombination","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","map","index","key","data-status","data-id","data-is-empty","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"8KAKMA,qBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAkBRQ,oBAAsB,SAACC,GACrB,GAAGA,EAAMC,OAAOC,QAAQC,QAAS,CAC/B,IAAIC,GAAMJ,EAAMC,OAAOC,QAAQE,GAC3BC,EAAQZ,OAAAa,EAAA,EAAAb,CAAQD,EAAKe,MAAMC,OAC/BH,EAASD,GAAID,QAAU,KACvBX,EAAKiB,UAAY,IAAM,EAAIJ,EAASD,GAAIM,OAAS,IAAML,EAASD,GAAIM,OAAS,IAE7ElB,EAAKmB,SAAS,CACZH,MAAOH,MA3BMb,EAgCnBoB,UAAY,WAEV,IADA,IAAIJ,EAAQ,GACJK,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACzB,IAAIC,EAAO,CACTX,SAAS,EACTO,QAAQ,EACRN,GAAIS,GAENL,EAAMO,KAAKD,GAEb,OAAON,GAvCPhB,EAAKiB,QAAU,EACfjB,EAAKwB,eAAiB,CACpB,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGPxB,EAAKe,MAAQ,CACXC,MAAOhB,EAAKoB,aAhBGpB,wEA6CV,IAAAyB,EAAAtB,KACP,OACEuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZ1B,KAAKY,MAAMC,MAAMc,IAAI,SAACR,EAAMS,GAC3B,OACEL,EAAAC,EAAAC,cAAA,OACAI,IAAKD,EACLF,UAAU,aACVI,cAAaX,EAAKJ,OAClBgB,UAASZ,EAAKV,GACduB,gBAAeb,EAAKX,QACpByB,QAASX,EAAKlB,qBAEbe,EAAKJ,kBA3DCmB,cAqEnBC,IAASC,OAAOb,EAAAC,EAAAC,cAAC9B,EAAD,MAAU0C,SAASC,eAAe","file":"static/js/main.335db4e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\n\n\nclass Game extends Component{\n  constructor(props) {\n    super(props);\n\n    this.counter = 0;\n    this.winCombination = [\n      [0,1,2],\n      [3,4,5],\n      [6,7,8],\n      [0,3,6],\n      [1,4,7],\n      [2,5,8],\n      [0,4,8],\n      [2,4,6]\n    ]\n\n    this.state = {\n      cells: this.fillTable(),\n    }\n  }\n  checkWinCombination = (event) => {\n    if(event.target.dataset.isEmpty) {\n      let id = +event.target.dataset.id;   \n      let newCells = [... this.state.cells];\n      newCells[id].isEmpty = null;\n      this.counter++ % 2 === 0 ? newCells[id].status = 'X' : newCells[id].status = '0';\n\n      this.setState({\n        cells: newCells,\n      })\n    }\n  }\n\n  fillTable = () => {\n    let cells = [];\n    for(let i = 0; i < 9; i++) {\n      let cell = {\n        isEmpty: true,\n        status: false,\n        id: i,\n      }\n      cells.push(cell);\n    }\n    return cells;\n  }\n\n  render() {\n    return(\n      <div className=\"Game\">\n        {this.state.cells.map((cell, index) => {\n          return (\n            <div \n            key={index}\n            className=\"Game__cell\"\n            data-status={cell.status}\n            data-id={cell.id}\n            data-is-empty={cell.isEmpty}\n            onClick={this.checkWinCombination}\n            >\n            {cell.status}\n            </div>)\n          \n        })}\n      </div>\n    )\n  }\n}\n\n\nReactDOM.render(<Game />, document.getElementById('app'));"],"sourceRoot":""}