{"version":3,"sources":["index.js"],"names":["Game","props","_this","Object","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","putValueToArray","event","target","dataset","isEmpty","id","newCells","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","state","cells","crossStatus","circleStatus","counter","status","push","setState","sort","a","b","checkWinCombination","fillTable","i","cell","quantityEmptyCells","winCombination","map","combination","filter","item","indexOf","JSON","stringify","alert","restartGame","length","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","index","key","concat","data-status","data-id","data-is-empty","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ea21b16.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\n\n\nclass Game extends Component{\n  constructor(props) {\n    super(props);\n\n    this.counter = 0;\n    this.winCombination = [\n      [0,1,2],\n      [3,4,5],\n      [6,7,8],\n      [0,3,6],\n      [1,4,7],\n      [2,5,8],\n      [0,4,8],\n      [2,4,6]\n    ]\n\n    this.state = {\n      cells: this.fillTable(),\n      crossStatus: [],\n      circleStatus: [],\n    }\n  }\n  putValueToArray = (event) => {\n    if(event.target.dataset.isEmpty) {\n      let id = +event.target.dataset.id;   \n      let newCells = [...this.state.cells];\n      let crossStatus = [...this.state.crossStatus ];\n      let circleStatus = [...this.state.circleStatus];\n\n      newCells[id].isEmpty = null;\n      if(this.counter++ % 2 === 0) {\n        newCells[id].status = 'cross'\n        crossStatus.push(id);\n      } else {\n        newCells[id].status = 'circle'\n        circleStatus.push(id);\n      }\n\n      this.setState({\n        cells: newCells,\n        circleStatus: circleStatus.sort((a,b) => a < b ? -1 : 1),\n        crossStatus: crossStatus.sort((a,b) => a < b ? -1 : 1),\n      },() => {\n        this.checkWinCombination();\n      })\n    }\n  }\n\n  fillTable = () => {\n    let cells = [];\n    for(let i = 0; i < 9; i++) {\n      let cell = {\n        isEmpty: true,\n        status: false,\n        id: i,\n      }\n      cells.push(cell);\n    }\n    return cells;\n  }\n\n  checkWinCombination = () => {\n    let quantityEmptyCells = 0;\n    this.winCombination.map(combination => {\n      let crossStatus = this.state.crossStatus.filter(item => ~combination.indexOf(item));\n      let circleStatus = this.state.circleStatus.filter(item => ~combination.indexOf(item));\n\n\n      if (JSON.stringify(combination) === JSON.stringify(crossStatus)) {\n        alert(\"WIN: X\");\n        this.restartGame();\n        return;\n      } else if (\n        JSON.stringify(combination) === JSON.stringify(circleStatus)) {\n        alert(\"WIN: O\");\n        this.restartGame();\n        return;\n      } else if(quantityEmptyCells >= this.state.cells.length) {      \n          alert('Draw');\n          this.restartGame();\n          return;\n      }\n    })\n    \n    this.state.cells.map(cell => {\n      if(!cell.isEmpty) {\n        quantityEmptyCells++;\n      }\n    })\n  }\n\n  restartGame = () => {\n    this.counter = 0;\n    this.setState({\n        cells: this.fillTable(),\n        crossStatus: [],\n        circleStatus: [] \n    })\n  }\n\n  render() {\n    return(\n    <div>\n      <div className=\"Game\">\n        {this.state.cells.map((cell, index) => {\n          return (\n            <div \n            key={index}\n            className={`Game__cell ${cell.status ? `Game__cell-${cell.status}` : ''}`}\n            data-status={cell.status}\n            data-id={cell.id}\n            data-is-empty={cell.isEmpty}\n            onClick={this.putValueToArray}\n            >\n            </div>)\n        })}\n      </div>\n      <div className=\"Game__restart-btn\" onClick={this.restartGame}>RESTART GAME</div>\n    </div>\n    )\n  }\n}\n\n\nReactDOM.render(<Game />, document.getElementById('app'));"],"sourceRoot":""}