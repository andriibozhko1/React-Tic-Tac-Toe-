{"version":3,"sources":["index.js"],"names":["Game","props","_this","Object","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","putValueToArray","cell","console","log","isEmpty","id","newCells","_Users_andriybozhko_Desktop_React_react_Tic_Tac_Toe_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","state","cells","crossStatus","circleStatus","counter","status","push","setState","sort","a","b","checkWinCombination","fillTable","i","winCombination","map","combination","filter","item","indexOf","JSON","stringify","winStatus","alert","concat","restartGame","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","index","key","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.983263b3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\n\n\nclass Game extends Component{\n  constructor(props) {\n    super(props);\n\n    this.counter = 0;\n    this.winCombination = [\n      [0,1,2],\n      [3,4,5],\n      [6,7,8],\n      [0,3,6],\n      [1,4,7],\n      [2,5,8],\n      [0,4,8],\n      [2,4,6]\n    ]\n    this.winStatus = false;\n\n    this.state = {\n      cells: this.fillTable(),\n      crossStatus: [],\n      circleStatus: [],\n    }\n  }\n  putValueToArray = (cell) => {\n    console.log(cell);\n    if(cell.isEmpty) {\n      let id = +cell.id;   \n      let newCells = [...this.state.cells];\n      let crossStatus = [...this.state.crossStatus ];\n      let circleStatus = [...this.state.circleStatus];\n\n      newCells[id].isEmpty = null;\n      if(this.counter++ % 2 === 0) {\n        newCells[id].status = 'cross'\n        crossStatus.push(id);\n      } else {\n        newCells[id].status = 'circle'\n        circleStatus.push(id);\n      }\n\n      this.setState({\n        cells: newCells,\n        circleStatus: circleStatus.sort((a,b) => a < b ? -1 : 1),\n        crossStatus: crossStatus.sort((a,b) => a < b ? -1 : 1),\n      },() => {\n        this.checkWinCombination();\n      })\n    }\n  }\n\n  fillTable = () => {\n    let cells = [];\n    for(let i = 0; i < 9; i++) {\n      let cell = {\n        isEmpty: true,\n        status: false,\n        id: i,\n      }\n      cells.push(cell);\n    }\n    return cells;\n  }\n\n  checkWinCombination = () => {\n    this.winCombination.map(combination => {\n      let crossStatus = this.state.crossStatus.filter(item => ~combination.indexOf(item));\n      let circleStatus = this.state.circleStatus.filter(item => ~combination.indexOf(item));\n\n        if (JSON.stringify(combination) === JSON.stringify(crossStatus)) {\n          this.winStatus = 'X';\n          alert(`WIN: ${this.winStatus}`);\n          this.restartGame();\n          return;\n        } else if (JSON.stringify(combination) === JSON.stringify(circleStatus)) {\n            this.winStatus = 'O';\n            alert(`WIN: ${this.winStatus}`);\n            this.restartGame();\n            return;\n        }\n    })\n    if(!this.winStatus && this.counter >= 9) {\n      this.winStatus = 'Draw';\n      alert(this.winStatus);\n      this.restartGame();;\n      return;\n    }\n  }\n\n  restartGame = () => {\n    this.setState({\n        cells: this.fillTable(),\n        crossStatus: [],\n        circleStatus: [] \n    },() => {\n      this.counter = 0;\n      this.winStatus = false;\n    })\n  }\n\n  render() {\n    return(\n    <div>\n      <div className=\"Game\">\n        {this.state.cells.map((cell, index) => {\n          return (\n            <div \n            key={index}\n            className={`Game__cell ${cell.status ? `Game__cell-${cell.status}` : ''}`}\n            onClick={() => {\n              this.putValueToArray(cell)\n            }}\n            >\n            </div>)\n        })}\n      </div>\n      <div className=\"Game__restart-btn\" onClick={this.restartGame}>RESTART GAME</div>\n    </div>\n    )\n  }\n}\n\nReactDOM.render(<Game />, document.getElementById('app'));"],"sourceRoot":""}